name: Deployment # name of the workflow

on:
  push:
    branches:
      - main # branch name
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: careful-span-414702
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REGION: us-central1 # TODO: update Cloud Run service region
  APP: app

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/27613637629/locations/global/workloadIdentityPools/tutorial-github-pool/providers/tutorial-github-provider'
          service_account: 'gcp-github-actions@careful-span-414702.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ env.PROJECT_ID }}'

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: 'Build and push container'
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" ./app
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

      # - name: 'Render templatised config manifests'
      #   run: |-
      #     export PROJECT_ID="${{ env.PROJECT_ID }}"
      #     export REGION="${{ env.REGION }}"
      #     for template in $(ls config/*.template.yaml); do envsubst < ${template} > ${template%%.*}.yaml ; done

      - name: 'Create Cloud Deploy delivery pipeline'
        run: |-
          gcloud deploy apply --file ./clouddeploy.yaml --region ${{ env.GAR_LOCATION }}

      - name: 'Create release name'
        run: |-
          echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}

      - name: 'Create Cloud Deploy release'
        id: 'release'
        uses: 'google-github-actions/create-cloud-deploy-release@v0'
        with:
          delivery_pipeline: '${{ env.APP }}'
          name: '${{ env.RELEASE_NAME }}'
          region: '${{ env.REGION }}'
          description: '${{ env.GITHUB_COMMIT_MSG }}'
          skaffold_file: 'config/skaffold.yaml'
          images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}'

      - name: 'Report Cloud Deploy release'
        run: |-
          echo "Created release ${{ steps.release.outputs.name }} "
          echo "Release link ${{ steps.release.outputs.link }} "

# env:
#   PORT: 80
#   LOCATION: us-central1-a
#   AUTO_SCALING: 1
#   TIMEOUT: 8s
#   CPU: 2
#   MEMORY: 512Mi  
#   MAX_REQUESTS_PER_CONTAINER: 5
#   MIN_REQUESTS_PER_CONTAINER: 1
#   PROJECT_ID: careful-span-414702
#   APP_NAME: react-gcp-cloud-run

# jobs:
#   build:
#     permissions:
#       contents: 'read'
#       id-token: 'write'
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - id: auth
#         name: 'Authenticate to Google Cloud'
#         uses: 'google-github-actions/auth@v1'
#         with:
#           workload_identity_provider: 'projects/27613637629/locations/global/workloadIdentityPools/tutorial-github-pool/providers/tutorial-github-provider'
#           service_account: 'gcp-github-actions@careful-span-414702.iam.gserviceaccount.com'
#       - name: 'Set up Cloud SDK'
#         uses: 'google-github-actions/setup-gcloud@v1'
#       #Setup .env file    
#       # - name : Setup REACT ENV Files
#       #   env:
#       #     REACT_ENV: ${{ secrets.REACT_ENV }}
#       #   shell: bash
#       #   run: |- 
#       #      echo "${{ secrets.REACT_ENV }}" > .env           
#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v3
#         with:
#           context: ./
#           file: ./frontend/Dockerfile
#           push: false
#           tags: |-
#             gcr.io/${{env.PROJECT_ID}}/${{env.APP_NAME}}:${{ github.sha }} 
#             gcr.io/${{env.PROJECT_ID}}/${{env.APP_NAME}}:latest
#       - name: Authorize Docker push
#         run: gcloud auth configure-docker
#       - name: Push GCR.io
#         run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-a-docker.pkg.dev && docker push gcr.io/$PROJECT_ID/$APP_NAME:${{ github.sha }}
#       - name: Deploy to gcloud run to PROD
#         # if: github.ref == 'refs/heads/main'
#         run: gcloud run deploy ${{env.APP_NAME}} --image="gcr.io/${{env.PROJECT_ID}}/${{env.APP_NAME}}:${{ github.sha }}" 
#              --port=${{env.PORT}} --allow-unauthenticated --project=${{env.PROJECT_ID}} --region=${{env.LOCATION}} --memory=${{env.MEMORY}}
#              --timeout=${{env.TIMEOUT}} --memory=${{env.MEMORY}} --max-instances=${{env.MAX_REQUESTS_PER_CONTAINER}} --min-instances=${{env.MIN_REQUESTS_PER_CONTAINER}} 
#              --set-env-vars NODE_ENV=production --concurrency=${{env.AUTO_SCALING}}