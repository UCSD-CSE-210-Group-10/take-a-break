name: React and Go Building and Testing # name of the workflow

on:
  push:
    branches:
      - main # branch name
  pull_request:
    branches:
      - main

jobs:
  run-react-workflow:
    runs-on: ubuntu-latest
    env:
      EXAMPLE: example # environment variable
    defaults:
      run:
        working-directory: ./frontend

    steps:
      # checkout the repository content to github runner
      - name: Checkout
        uses: actions/checkout@v2

      # setup nodejs environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "18.16.1"

      # cache the dependencies to speed up the build
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # install dependencies
      - name: Install dependencies
        run: npm i

      # build the react app
      - name: Build
        run: npm run build

      # test the react app
      - name: Test
        run: npm run test
  
  run-go-worfklow:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_DB: take-a-break

    env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
        POSTGRES_DB: take-a-break
        POSTGRES_PORT: 5432
        
    steps:
    
    - uses: actions/checkout@v3

    - name: Wait for PostgreSQL to be ready
      run: |
          timeout=300
          while ! pg_isready -h localhost -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB; do
            sleep 5
            timeout=$((timeout-5))
            if [ $timeout -le 0 ]; then
              echo "Timed out waiting for PostgreSQL to be ready."
              exit 1
            fi
          done
      
    - name: Load SQL Data
      run: PGPASSWORD=${{ secrets.PGPASSWORD }} psql -U $POSTGRES_USER -d $POSTGRES_DB -W -h localhost -p $POSTGRES_PORT -f ../sql/create_tables.sql
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...


